name: Deploy
on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  Deploy:
    environment: production
    runs-on: ubuntu-latest
    env:
      AMBER_SECRET: ${{ secrets.AMBER_SECRET }}
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server."
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - name: Deploy
        run: |
          set -x
          echo Installing amber secrets manager
          curl -L https://github.com/fpco/amber/releases/download/v0.1.3/amber-x86_64-unknown-linux-musl > amber
          chmod +x ./amber
          mv ./amber /usr/local/bin/amber
          mkdir -p ~/.ssh
          amber exec -- sh -c 'ssh-keyscan $DOKKU_HOST >> ~/.ssh/known_hosts'
          eval `ssh-agent -s`
          ssh-add - <<< "${{ secrets.DOKKU_SSH_PRIVATE_KEY}}"
          amber exec -- sh -c 'ssh dokku@$DOKKU_HOST -C $CONTAINER_HOSTING_API_KEY dokku apps:create container-ddkyvtw || true'
          amber exec -- sh -c 'ssh dokku@$DOKKU_HOST -C $CONTAINER_HOSTING_API_KEY dokku builder:set container-ddkyvtw build-dir src'
          amber exec -- sh -c 'ssh dokku@$DOKKU_HOST -C $CONTAINER_HOSTING_API_KEY dokku builder-dockerfile:set container-ddkyvtw dockerfile-path Dockerfile'

          # Set common env settings
          amber exec -- sh -c 'ssh dokku@$DOKKU_HOST -C $CONTAINER_HOSTING_API_KEY "dokku config:set --no-restart container-ddkyvtw DB_USER=$DB_USER"'
          amber exec -- sh -c 'ssh dokku@$DOKKU_HOST -C $CONTAINER_HOSTING_API_KEY "dokku config:set --no-restart container-ddkyvtw DB_PASSWORD=$DB_PASSWORD"'
          amber exec -- sh -c 'ssh dokku@$DOKKU_HOST -C $CONTAINER_HOSTING_API_KEY "dokku config:set --no-restart container-ddkyvtw DB_HOST=$DB_HOST"'
          amber exec -- sh -c 'ssh dokku@$DOKKU_HOST -C $CONTAINER_HOSTING_API_KEY "dokku config:set --no-restart container-ddkyvtw DB_PORT=$DB_PORT"'
          amber exec -- sh -c 'ssh dokku@$DOKKU_HOST -C $CONTAINER_HOSTING_API_KEY "dokku config:set --no-restart container-ddkyvtw DB_NAME=$DB_NAME"'

          amber exec -- sh -c 'ssh dokku@$DOKKU_HOST -C $CONTAINER_HOSTING_API_KEY "dokku config:set --no-restart container-ddkyvtw RAILS_DEVELOPMENT_HOSTS=container-ddkyvtw.containers.anotherwebservice.com"'
          # Database connection string (rails)
          amber exec -- sh -c 'ssh dokku@$DOKKU_HOST -C $CONTAINER_HOSTING_API_KEY "dokku config:set --no-restart container-ddkyvtw DATABASE_URL=$RAILS_DATABASE_URL"'
          # Database connection string (django)
          amber exec -- sh -c 'ssh dokku@$DOKKU_HOST -C $CONTAINER_HOSTING_API_KEY "dokku config:set --no-restart container-ddkyvtw SECRET_KEY=$DJANGO_SECRET_KEY"'
          amber exec -- sh -c 'ssh dokku@$DOKKU_HOST -C $CONTAINER_HOSTING_API_KEY "dokku config:set --no-restart container-ddkyvtw ALLOWED_HOSTS=$ALLOWED_HOSTS"'
          amber exec -- sh -c 'ssh dokku@$DOKKU_HOST -C $CONTAINER_HOSTING_API_KEY "dokku config:set --no-restart container-ddkyvtw DEBUG=$DJANGO_DEBUG"'
          amber exec -- sh -c 'ssh dokku@$DOKKU_HOST -C $CONTAINER_HOSTING_API_KEY "dokku config:set --no-restart container-ddkyvtw DB_ENGINE=$DJANGO_ENGINE"'
          amber exec -- sh -c 'ssh dokku@$DOKKU_HOST -C $CONTAINER_HOSTING_API_KEY "dokku config:set --no-restart container-ddkyvtw DB_NAME=$DJANGO_DB_NAME"'
          amber exec -- sh -c 'ssh dokku@$DOKKU_HOST -C $CONTAINER_HOSTING_API_KEY "dokku config:set --no-restart container-ddkyvtw DB_HOST=$DJANGO_DB_HOST"'
          amber exec -- sh -c 'ssh dokku@$DOKKU_HOST -C $CONTAINER_HOSTING_API_KEY "dokku config:set --no-restart container-ddkyvtw DB_USER=$DJANGO_DB_USER"'
          amber exec -- sh -c 'ssh dokku@$DOKKU_HOST -C $CONTAINER_HOSTING_API_KEY "dokku config:set --no-restart container-ddkyvtw DB_PASSWORD=$DJANGO_DB_PASSWORD"'
          amber exec -- sh -c 'ssh dokku@$DOKKU_HOST -C $CONTAINER_HOSTING_API_KEY "dokku config:set --no-restart container-ddkyvtw DB_PORT=$DJANGO_DB_PORT"'

          amber exec -- sh -c 'ssh dokku@$DOKKU_HOST -C $CONTAINER_HOSTING_API_KEY dokku git:sync --build container-ddkyvtw https://github.com/winkokooo12/container-ddkyvtw.git main'
          # Assign letsencrypt wildcard certificate
          amber exec -- sh -c 'ssh dokku@$DOKKU_HOST -C "$CONTAINER_HOSTING_API_KEY dokku certs:add container-ddkyvtw < cert-key.tar"'

